let clean,minSatisfying,versionData,expectedNodeVersion;_a06‍.x([["default",()=>_a06‍.o]]);_a06‍.w("semver",[["clean",["clean"],function(v){clean=v}],["minSatisfying",["minSatisfying"],function(v){minSatisfying=v}]]);_a06‍.w("./version-data",[["default",["versionData"],function(v){versionData=v}]]);_a06‍.w("expected-node-version",[["default",["expectedNodeVersion"],function(v){expectedNodeVersion=v}]]);




const _a06‍anonymous=() => {
  const expected = expectedNodeVersion()

  return versionData().then(records => {
    const versions = records
      .filter(record => record.name === 'Node.js')
      .map(record => record.version)
      .map(version => clean(version))

    return minSatisfying(versions, expected)
  })
};_a06‍.d(_a06‍anonymous);
